name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:

   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: superuser
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with: 
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml



    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Setup NodeJS Version
            uses: actions/setup-node@v4
            with:
              node-version: 18
    
          - name: Install Dependencies
            run: npm install

          - name: Run Code Coverage
            continue-on-error: true
            run: npm run coverage
            

          - name: Archive Code Coverage
            uses: actions/upload-artifact@v4
            with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5


    docker:
      permissions: #added
        packages: write #added
      runs-on: ubuntu-latest
      needs:
        - unit-testing
        - code-coverage

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Set lowercase repository owner
          run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
        - name: login to github Container Registery
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'

        - name: Build and Push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ghcr.io/${{ env.REPO_OWNER_LC }}/solar-system:${{ github.sha }}
    
    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment: 
        name: development
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Set up Kubectl
          uses: azure/setup-kubectl@v4
          with: 
            version: v1.26.0

        - name: Set Up Context
          uses: azure/k8s-set-context@v4
          with: 
            method: kubeconfig
            kubeconfig: '$secrets.KUBECONFIG'

        - name: Test kubeconfig setup
          run: kubectl version --short -o yaml